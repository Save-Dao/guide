{"remainingRequest":"/Users/baba/grimoire/Mio-grimoire/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/baba/grimoire/Mio-grimoire/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/baba/grimoire/Mio-grimoire/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/baba/grimoire/Mio-grimoire/docs/rips.md","dependencies":[{"path":"/Users/baba/grimoire/Mio-grimoire/docs/rips.md","mtime":1646179786816},{"path":"/Users/baba/grimoire/Mio-grimoire/.docusaurus/docusaurus-plugin-content-docs/site-docs-rips-md-fe1.json","mtime":1646186692738},{"path":"/Users/baba/grimoire/Mio-grimoire/node_modules/cache-loader/dist/cjs.js","mtime":1646180933439},{"path":"/Users/baba/grimoire/Mio-grimoire/node_modules/babel-loader/lib/index.js","mtime":1646180932423},{"path":"/Users/baba/grimoire/Mio-grimoire/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1646181558618},{"path":"/Users/baba/grimoire/Mio-grimoire/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1646181556083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2JhYmEvZ3JpbW9pcmUvTWlvLWdyaW1vaXJlL25vZGVfbW9kdWxlcy9AZG9jdXNhdXJ1cy9jb3JlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J3JpcHMnLHRpdGxlOidSSVBzJyxzaWRlYmFyX2xhYmVsOidSSVBzJ307ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiaWQiOiJyaXBzIiwidGl0bGUiOiJSSVBzIiwiZGVzY3JpcHRpb24iOiJBcHBseSBmb3IgUklQIEZ1bmRpbmciLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3JpcHMubWQiLCJwZXJtYWxpbmsiOiIvc2F2ZWRhby9kb2NzL3JpcHMiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL3JhaWQtZ3VpbGQvaGFuZGJvb2svZWRpdC9tYXN0ZXIvZG9jcy9yaXBzLm1kIiwic2lkZWJhcl9sYWJlbCI6IlJJUHMiLCJzaWRlYmFyIjoiaG93U2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiU2hpcCBhIFJhaWQiLCJwZXJtYWxpbmsiOiIvc2F2ZWRhby9kb2NzL3NoaXBwZWQifSwibmV4dCI6eyJ0aXRsZSI6IlByb3Bvc2FsIFR5cGVzIiwicGVybWFsaW5rIjoiL3NhdmVkYW8vZG9jcy9wcm9wb3NhbC10eXBlcyJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidBcHBseSBmb3IgUklQIEZ1bmRpbmcnLGlkOidhcHBseS1mb3ItcmlwLWZ1bmRpbmcnLGNoaWxkcmVuOltdfV07Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDMiLHsiaWQiOiJhcHBseS1mb3ItcmlwLWZ1bmRpbmcifSxgQXBwbHkgZm9yIFJJUCBGdW5kaW5nYCksbWR4KCJwIixudWxsLGBSYWlkIEd1aWxkIEltcHJvdmVtZW50IFByb3Bvc2FscywgY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMg4oCcUklQc+KAnSwgYXJlIGFuIGludmFsdWFibGUgcGllY2UgdG8gZW5zdXJpbmcgdGhhdCBSYWlkIEd1aWxkIG9wZXJhdGVzIGF0IGl0cyBmdWxsZXN0IGNhcGFjaXR5IDI0LzcuICBgKSxtZHgoInAiLG51bGwsYFJJUHMgYXJlIGdlbmVyYWxseSBmb2N1c2VkIG9uIEd1aWxkIGludGVybmFsIG9wZXJhdGlvbnMsIGJ1dCBpbiBzb21lIGNhc2VzLCBSSVBzIGhhdmUgbWFuaWZlc3RlZCBpbiB0aGUgR3VpbGQgYnVpbGRpbmcgb3Blbi1zb3VyY2UgdG9vbHMgZm9yIHRoZSB3aWRlciB3ZWIzIGVjb3N5c3RlbS4gIGApLG1keCgicCIsbnVsbCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9zbWFydGludm9pY2UueHl6LyJ9KSxgU21hcnQgSW52b2ljZWApLGAgaXMgYSBncmVhdCBleGFtcGxlLCBhcyBpdCBiZWdhbiBkZXZlbG9wbWVudCBhcyBhbiBpbnRlcm5hbCB0b29sIChlc2Nyb3cpIGZvciBSYWlkZXJzIHRvIG9idGFpbiBwYXltZW50IGZyb20gdGhlaXIgY2xpZW50cy4gIGApLG1keCgicCIsbnVsbCxgSWYgdGhpcyBleGNpdGVzIHlvdSwgd2UgZW5jb3VyYWdlIHlvdSB0byBrZWVwIHJlYWRpbmchIGApLG1keCgicCIsbnVsbCxgTG9va2luZyB0byByZWNlaXZlIGZ1bmRpbmcgZm9yIGEgUmFpZCBHdWlsZCBJbXByb3ZlbWVudCBQcm9wb3NhbCAoUklQKT8gV2Ugc3VnZ2VzdCByZWNlaXZpbmcgc29mdCBjb25zZW5zdXMgZnJvbSB0aGUgREFPIGJlZm9yZSBwdXR0aW5nIGFueXRoaW5nIG9uY2hhaW4uIFRoZSBiZXN0IHdheSB0byBkbyB0aGlzIGlzIGFzIGZvbGxvd3M6YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQ3JlYXRlIGFuIGlzc3VlIG9uIHRoZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3JhaWQtZ3VpbGQvUklQcy9pc3N1ZXMvbmV3P2Fzc2lnbmVlcz0mbGFiZWxzPVJJUCZ0ZW1wbGF0ZT1yaXAtcmVxdWVzdC5tZCZ0aXRsZT0ifSksYFJJUHMgUmVwb2ApLGAgZGV0YWlsaW5nIHdoeSBpdCBiZW5lZml0cyB0aGUgREFPIGFuZCBob3cgaXQgd2lsbCBiZSBleGVjdXRlZC5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQWRkIHRoZSBuZXcgaXNzdWUgdG8gdGhlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vcmFpZC1ndWlsZC9SSVBzL3Byb2plY3RzLzEifSksYFJJUCBSZXF1ZXN0c2ApLGAgUHJvamVjdCAob3IgYXNrIGEga2VlcGVyKS5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgU2hhcmUgdGhhdCByZXF1ZXN0IGluIERpc2NvcmQgdW5kZXIgdGhlIGAsbWR4KCJzcGFuIix7Y2xhc3M6ImNoYW5uZWxzIn0sYCNyaXAtZGlzY3Vzc2lvbmApLGAgR3VpbGQgSFEgY2hhbm5lbC5gKSksbWR4KCJwIixudWxsLGBJZiB5b3UgZG9u4oCZdCB5ZXQgaGF2ZSB0aGUgdGFsZW50IHlvdSBuZWVkIHRvIGV4ZWN1dGUgdGhlIFJJUCwgbWFrZSBzdXJlIHRvIGRyb3AgYSBsaW5rIHRvIHlvdXIgcHJvcG9zYWwgYWxvbmcgd2l0aCBhIGJyaWVmIFRMO0RSIHRvIHRoZSBgLG1keCgic3BhbiIse2NsYXNzOiJjaGFubmVscyJ9LGAjd2hvLWlzLWF2YWlsYWJsZWApLGAgY2hhbm5lbCBhbmQgb3V0bGluZSB0aGUgZGlmZmVyZW50IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGByb2xlc2ApLGAgeW91IG5lZWQgZm9yIHRoZSBSSVAuICBTaGFyZSB0aGUgcHJvcG9zYWwgZHVyaW5nIHRoZSB3ZWVrbHkgUm91bmR0YWJsZSBmb3IgYWRkaXRpb25hbCBjb21tZW50cyBhbmQgZmVlZGJhY2suYCksbWR4KCJwIixudWxsLGBPbmNlIHlvdSBoYXZlIGNvbXBsZXRlZCB0aGUgcHJlY2VkaW5nIHN0ZXBzLCBkb3VibGUgY2hlY2sgdG8gbWFrZSBzdXJlIHlvdSBhbmQgeW91ciB0ZWFtIGhhdmUgZXZlcnl0aGluZyB5b3UgbmVlZCB0byBtYWtlIGFuIG9mZmljaWFsIHByb3Bvc2FsIHRvIHRoZSBEQU9gKSxtZHgoInAiLG51bGwsYE5leHQsIHJlZmVyIHRvIHRoZSBwcm9wb3NhbCBwcm9jZXNzIGJlbG93IHRvIHJlcXVlc3QgZnVuZGluZyBmb3IgeW91ciBSSVAuYCksbWR4KCJwIixudWxsLGBCeSBmb2xsb3dpbmcgdGhlc2Ugc3RlcHMsIHlvdXIgcHJvcG9zYWwgd2lsbCByZWNlaXZlIGZhciBtb3JlIGZlZWRiYWNrIGFuZCBoYXZlIGEgbXVjaCBoaWdoZXIgY2hhbmNlIG9mIGJlaW5nIHBhc3NlZC5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/baba/grimoire/Mio-grimoire/docs/rips.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"sIACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,MADwB,CAE5BC,KAAK,CAAE,MAFqB,CAG5BC,aAAa,CAAE,MAHa,CAApB,CAKT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,MADgB,CAEtB,QAAS,MAFa,CAGtB,cAAe,uBAHO,CAItB,SAAU,oBAJY,CAKtB,YAAa,oBALS,CAMtB,UAAW,iEANW,CAOtB,gBAAiB,MAPK,CAQtB,UAAW,YARW,CAStB,WAAY,CACV,QAAS,aADC,CAEV,YAAa,uBAFH,CATU,CAatB,OAAQ,CACN,QAAS,gBADH,CAEN,YAAa,8BAFP,CAbc,CAAjB,CAkBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,uBADgB,CAEvBL,EAAE,CAAE,uBAFmB,CAGvBM,QAAQ,CAAE,EAHa,CAAD,CAAjB,CAKP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBT,QADkB,CAApB,CAGA,KAAMU,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,uBADA,CAAR,CAEK,uBAFL,CAFK,CAKL,aAAK,gKAAL,CALK,CAML,aAAK,0KAAL,CANK,CAOL,aAAG,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,2BADa,CAAtB,EAEI,eAFJ,CAAH,CAE4B,+HAF5B,CAPK,CAUL,aAAK,yDAAL,CAVK,CAWL,aAAK,kMAAL,CAXK,CAYL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,yBAAtB,CAA+C,kBAAG,UAAU,CAAC,IAAd,EAAuB,CAClE,OAAQ,oGAD0D,CAAvB,EAExC,WAFwC,CAA/C,CAEwB,iEAFxB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,2BAAtB,CAAiD,kBAAG,UAAU,CAAC,IAAd,EAAuB,CACpE,OAAQ,+CAD4D,CAAvB,EAE1C,cAF0C,CAAjD,CAE2B,6BAF3B,CAJF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAsB,0CAAtB,CAAgE,YAAM,KAAK,CAAC,UAAZ,EAAyB,iBAAzB,CAAhE,CAAmH,oBAAnH,CAPF,CAZK,CAqBL,aAAK,0IAAL,CAA+I,YAAM,KAAK,CAAC,UAAZ,EAAyB,mBAAzB,CAA/I,CAAoM,qCAApM,CAAyO,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAzO,CAA4R,+GAA5R,CArBK,CAsBL,aAAK,2JAAL,CAtBK,CAuBL,aAAK,4EAAL,CAvBK,CAwBL,aAAK,uHAAL,CAxBK,CAAP,CA0BD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'rips',\n\ttitle: 'RIPs',\n\tsidebar_label: 'RIPs'\n};\nexport const metadata = {\n  \"id\": \"rips\",\n  \"title\": \"RIPs\",\n  \"description\": \"Apply for RIP Funding\",\n  \"source\": \"@site/docs/rips.md\",\n  \"permalink\": \"/savedao/docs/rips\",\n  \"editUrl\": \"https://github.com/raid-guild/handbook/edit/master/docs/rips.md\",\n  \"sidebar_label\": \"RIPs\",\n  \"sidebar\": \"howSidebar\",\n  \"previous\": {\n    \"title\": \"Ship a Raid\",\n    \"permalink\": \"/savedao/docs/shipped\"\n  },\n  \"next\": {\n    \"title\": \"Proposal Types\",\n    \"permalink\": \"/savedao/docs/proposal-types\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Apply for RIP Funding',\n  id: 'apply-for-rip-funding',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h3 {...{\n      \"id\": \"apply-for-rip-funding\"\n    }}>{`Apply for RIP Funding`}</h3>\n    <p>{`Raid Guild Improvement Proposals, commonly referred to as “RIPs”, are an invaluable piece to ensuring that Raid Guild operates at its fullest capacity 24/7.  `}</p>\n    <p>{`RIPs are generally focused on Guild internal operations, but in some cases, RIPs have manifested in the Guild building open-source tools for the wider web3 ecosystem.  `}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://smartinvoice.xyz/\"\n      }}>{`Smart Invoice`}</a>{` is a great example, as it began development as an internal tool (escrow) for Raiders to obtain payment from their clients.  `}</p>\n    <p>{`If this excites you, we encourage you to keep reading! `}</p>\n    <p>{`Looking to receive funding for a Raid Guild Improvement Proposal (RIP)? We suggest receiving soft consensus from the DAO before putting anything onchain. The best way to do this is as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create an issue on the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/raid-guild/RIPs/issues/new?assignees=&labels=RIP&template=rip-request.md&title=\"\n        }}>{`RIPs Repo`}</a>{` detailing why it benefits the DAO and how it will be executed.`}</li>\n      <li parentName=\"ul\">{`Add the new issue to the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/raid-guild/RIPs/projects/1\"\n        }}>{`RIP Requests`}</a>{` Project (or ask a keeper).`}</li>\n      <li parentName=\"ul\">{`Share that request in Discord under the `}<span class='channels'>{`#rip-discussion`}</span>{` Guild HQ channel.`}</li>\n    </ul>\n    <p>{`If you don’t yet have the talent you need to execute the RIP, make sure to drop a link to your proposal along with a brief TL;DR to the `}<span class='channels'>{`#who-is-available`}</span>{` channel and outline the different `}<inlineCode parentName=\"p\">{`roles`}</inlineCode>{` you need for the RIP.  Share the proposal during the weekly Roundtable for additional comments and feedback.`}</p>\n    <p>{`Once you have completed the preceding steps, double check to make sure you and your team have everything you need to make an official proposal to the DAO`}</p>\n    <p>{`Next, refer to the proposal process below to request funding for your RIP.`}</p>\n    <p>{`By following these steps, your proposal will receive far more feedback and have a much higher chance of being passed.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}